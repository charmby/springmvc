<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/util       
        http://www.springframework.org/schema/util/spring-util-3.2.xsd 
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 该文件只会扫描springmvc的注释，并不会扫描spring的service等注释 -->
	<!-- 开启注解模式驱动 -->
	<!-- <mvc:annotation-driven /> -->
	<mvc:annotation-driven>
		<!-- 定义message转换 -->
		<mvc:message-converters>
			<!-- <bean class="com.gsafety.httpmessageconverter.DefaultJacksonHttpMessageConverter"> 
				True only for the blog article - a production system would set this to false 
				to reduce the number of bytes sent across the wire: <property name="prettyPrint" 
				value="true" /> </bean> -->
			<ref bean="stringHttpMessageConverter" />
			<ref bean="fastJsonHttpMessageConverter" />
			<ref bean="marshallingHttpMessageConverter" />

		</mvc:message-converters>
	</mvc:annotation-driven>


	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<constructor-arg value="UTF-8" index="0"></constructor-arg><!-- 
			避免出现乱码 -->
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="fastJsonHttpMessageConverter"
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">

		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value><!-- 避免IE出现下载JSON文件的情况 -->
			</list>
		</property>
		<property name="features">
			<util:list>
				<!-- <value>WriteMapNullValue</value> -->
				<value>QuoteFieldNames</value>
				<value>WriteDateUseDateFormat</value>
			</util:list>
		</property>
	</bean>

	<bean id="marshallingHttpMessageConverter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<property name="marshaller" ref="castorMarshaller" />
		<property name="unmarshaller" ref="castorMarshaller" />
		<property name="supportedMediaTypes">
			<list>
				<value>text/xml;charset=UTF-8</value>
				<value>application/xml;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 返回类型定义 -->
	<util:list id="messageConverters">
		<ref bean="stringHttpMessageConverter" />
		<ref bean="fastJsonHttpMessageConverter" />
		<ref bean="marshallingHttpMessageConverter" />
	</util:list>





	<!-- 扫包 com.gsafety.**.controller代表了 1、com.gsafety.bak.controller； 2、com.gsafety.controller；3、com.gsafety.a.b.xxx.controller 
		的package路径 -->
	<context:component-scan
		base-package="com.gsafety.**.controller,com.gsafety.po,com.gsafety.**.po" />

	<!-- 还需要在spring-mvc.xml中添加映射静态的配置： -->

	<mvc:default-servlet-handler />

	<!-- 静态资源过滤 -->
	<mvc:resources location="/resources/" mapping="/resources/**" />

	<!-- 怎么都没办法取到下面的静态资源，先放过，以后再处理。 <mvc:resources location="/WEB-INF/theme/blue/" 
		mapping="/blue/**" /> <mvc:resources location="/WEB-INF/theme/red/" mapping="/red/**" 
		/> -->
	<!-- 静态资源必须放在webapps下面，且不能在web-inf下面。 -->
	<mvc:resources location="/theme/green/" mapping="/green/**" />
	<mvc:resources location="/theme/yellow/" mapping="/yellow/**" />
	<!-- 引入jQuery的js组件 -->
	<mvc:resources location="/common/jQuery/" mapping="/jquery/**" />
	<!-- 引入jQuery ui的js组件 -->
	<mvc:resources location="/common/jquery-ui-1.12.1/"
		mapping="/jqueryui/**" />
	<!-- 引入boostramp组件 -->
	<mvc:resources location="/common/bootstrap-3.3.7/dist/"
		mapping="/bootstrap/**" />
	<mvc:resources location="/common/vendor/" mapping="/vendor/**" />
	<!-- 引入字体组件 引入bootstrap字体组件 -->
	<!-- 引入bootstrap字体组件 -->
	<mvc:resources
		location="/common/Font-Awesome-3.2.1/css/,/common/Font-Awesome-3.2.1/font/,/common/bootstrap-3.3.7/dist/fonts/"
		mapping="/font/**" />
	<mvc:resources location="/common/font-awesome/css/,/common/font-awesome/fonts/"
		mapping="/fonts/**" />

	<mvc:resources location="/WEB-INF/base/" mapping="/base/**" />

	<bean class="com.gsafety.util.swaggerconfig.SwaggerConfiguration" />
	<!-- swagger ui resources -->
	<!--一定不能放开，否则页面就显示不出来了。 <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars" 
		/> -->
	<!-- 视图渲染 jsp/freemaker/velocity -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 制定页面存放的路径 -->
		<property name="prefix" value="/WEB-INF/pages/"></property>
		<!-- 文件的后缀 -->
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 拦截器入口 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.gsafety.util.interceptor.LogHandlerInterceptorAdapter"></bean>
		</mvc:interceptor>


	</mvc:interceptors>


	<!-- 拦截器结束 -->

	<!-- xml和json转化 -->

	<!-- <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>text/html;charset=UTF-8</value> 
		<value>application/json;charset=UTF-8</value> </list> </property> </bean> -->

	<bean id="mappingJacksonHttpMessageConverter"
		class="com.gsafety.httpmessageconverter.DefaultJacksonHttpMessageConverter">
		<property name="prettyPrint" value="true" />
	</bean>

	<bean id="annotationMethodHandlerExceptionResolver"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
		<property name="order" value="0" />
	</bean>

	<!-- 处理异常信息 -->

	<!-- 国际化开始 -->
	<!-- 用于接收浏览器的国际化语言 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<!-- 国际化信息所在的文件名 -->
		<property name="basename" value="messages" />
		<!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称 -->
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>
	<!-- 用于接收浏览器的国际化语言 -->
	<!-- 请求/Session/Cookie -->
	<mvc:interceptors>
		<!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>
	<!-- 实现session国际化 国际化是在后台处理，返回的。 -->
	<!-- <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" 
		/> -->
	<!-- cookies国际化 -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />
	<!-- 请求/Session/Cookie -->

	<!-- 国际化结束 -->
<!-- 支持上传文件 --> 
    <bean id="multipartResolver" 
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver" /> 
	<!-- 异常处理开始 -->
	<bean class="com.gsafety.exceptionHandlers.SimpleExceptionHandler"></bean>
	<!-- 异常处理结束 -->




	<!-- 被代理对象 -->
	<bean id="math" class="com.gsafety.commonutil.MathUtils"></bean>
	<!-- 通知 -->
	<bean id="advices" class="com.gsafety.advice.Advices"></bean>

	<!-- aop配置 -->
	<aop:config proxy-target-class="false">
		<!--切面 -->
		<aop:aspect ref="advices">
			<!-- 切点 ,在被代理类的什么位置进行通知操作类必须到方法， -->
			<aop:pointcut expression="execution(* com.gsafety.commonutil.MathUtils.*(..))"
				id="pointcut1" />
			<!--连接通知方法与切点 -->
			<aop:before method="advicesMath" pointcut-ref="pointcut1" />
			<aop:after method="advicesMath2" pointcut-ref="pointcut1" />
			<aop:around method="advicesMath" pointcut-ref="pointcut1" />
		</aop:aspect>
	</aop:config>

</beans>