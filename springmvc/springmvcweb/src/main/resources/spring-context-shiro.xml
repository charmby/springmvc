<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">



	<!-- 开启shiro注解支持 -->
	<bean
		class=" org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 缓存 在spring-context配置文件中，还有一个是需要配置-cacheManager,因为shiro的session是自己实现的，所以我们还需要一个缓存框架，所以在spring的配置文件一定要注意配置哦，用的是ehcache -->
	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
			    /pages/errors.html=anon
			    /common/**=anon
				/dist/**=anon
				/theme/**=anon
				/user/login=anon
				/static/**=anon
				/pages/blank.html=anon
				/index.html=user
				/user/logout=logout
				/cas=casFilter
				/pages/forms.html=perms[user:deleteUser]
				/pages/buttons.html=roles[sa]
				/pages/tables.html=roles[sa]
				/pages/**=user
				/**=anon
			</value>
		</constructor-arg>
	</bean>

	<bean id="userRealm" class="com.gsafety.shiro.realms.UserRealm" />
	<!-- 安全认证过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- loginUrl登录页面，successUrl登录成功的页面 -->
		<property name="loginUrl" value="http://192.168.84.28:8080/cas/login?service=http://localhost:8180/springmvcweb/cas" />
		<!-- 成功页面在集成cas的时候，要去掉，否则一直在重定向。但是在单独使用shiro的时候要保留。 -->
		<property name="successUrl" value="/" />
		<!-- unauthorizedUrl，系统未认证时跳转的页面 -->
		<property name="unauthorizedUrl" value="/pages/blank.html" />
		<property name="filters">
			<map>
				<!-- 是否启用验证码检验 -->
				<entry key="casFilter" value-ref="casFilter" />
				<!-- 匿名的校验 -->
				<entry key="anon" value-ref="myAnonFilter" />
				<!-- 匿名的校验 -->
				<entry key="authc" value-ref="myAuthcFilter" />
				<!-- 登出的校验 -->
				<entry key="logout" value-ref="casLogout" />
				<!-- 用户的校验 -->
				<entry key="user" value-ref="myUserFilter" />
				<!-- 权限校验 -->
				<entry key="perms" value-ref="myPermsFilter" />
				<!-- 橘色校验 -->
				<entry key="roles" value-ref="myRolesFilter" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<ref bean="shiroFilterChainDefinitions" />
		</property>
	</bean>

	<!-- 登录验证过滤器 -->
	<bean id="myAuthcFilter" class="com.gsafety.shiro.filter.MyFormAuthenticationFilter">
		<!-- 配置登录页面 -->
		<!-- <property name="loginUrl" value="/pages/login.html" />
		<property name="loginRequest" value="/user/login" /> -->
	</bean>
	<!-- 可以进行自定义 引入匿名对象 -->

	<bean id="myAnonFilter" class="org.apache.shiro.web.filter.authc.AnonymousFilter" />
	<bean id="myPermsFilter"
		class="org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter" />
	<bean id="myUserFilter" class="org.apache.shiro.web.filter.authc.UserFilter" />
	<bean id="myRolesFilter"
		class="org.apache.shiro.web.filter.authz.RolesAuthorizationFilter" />
	<bean id="mylogoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter" />
	<!-- 定义Shiro安全管理配置 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 1、shiro自己的数据库认证。否则走cas-server的认证 -->
		<!-- <property name="realm" ref="userRealm" /> -->
		<property name="realm" ref="casRealm" />
		<!-- 开启cas的remenbeme -->
		<property name="subjectFactory" ref="casSubjectFactory" /> 
	</bean>
	<!-- shiro-cas登录过滤器 -->
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">
		<!-- 配置验证错误时的失败页面 -->
		<!-- 配置验证错误时的失败页面 ，这里配置为登录页面 -->
		<property name="failureUrl"
			value="/pages/errors.html" />
	</bean>

	<!-- 退出登录过滤器 -->
	<bean id="casLogout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl"
			value="http://192.168.84.28:8080/cas/logout?service=http://localhost:8180/springmvcweb/index.html" />
	</bean>


	<!-- 如果要实现cas的remember me的功能，需要用到下面这个bean，并设置到securityManager的subjectFactory中 
		配置如下property name="subjectFactory" ref="casSubjectFactory" -->
	<bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory" />

	<!-- 自定义casRealm -->
	<bean id="casRealm" class="com.gsafety.shiro.realms.CASRealm">
		<!-- <property name="defaultRoles" value="ROLE_USER" /> -->
		<!-- 配置cas服务器地址 -->
		<property name="casServerUrlPrefix" value="http://192.168.84.28:8080/cas" />
		<!-- 客户端的回调地址设置，必须和上面的shiro-cas过滤器casFilter拦截的地址一致 -->
		<property name="casService" value="http://localhost:8180/springmvcweb/cas" />
	</bean>
	   <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
	
	
	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>